@{
    ViewData["Title"] = "Profile";
}

<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">
<link href="~/css/profile.css" rel="stylesheet" asp-append-version="true" />

<div id="error-message" class="error-modal"></div>
<div class="profile-container">
    <h2>Profile</h2>
    <div id="error-message" class="error-modal"></div>
    <div class="profile-header">
        <div class="profile-picture-section">
            <form id="profile-pic-form" enctype="multipart/form-data" method="post" action="@Url.Action("ChangeProfilePicture", "Home")">
                <input id="file-input" type="file" name="profilePicture" class="hidden-input" accept="image/*" onchange="this.form.submit();" />
            </form>
            @if (ViewData["ProfilePicture"] != null)
            {
                <img id="profile-pic" src="data:image/png;base64,@Convert.ToBase64String((byte[])ViewData["ProfilePicture"])"
                     alt="Profile Picture" class="profile-pic" onclick="document.getElementById('file-input').click();" />
            }
            <form method="post" action="@Url.Action("ChangeProfilePicture", "Home")">
                <input type="hidden" name="deletePicture" value="true" />
                <button type="submit" class="btn-trash" title="Delete Profile Picture">
                    <i class="fas fa-trash-alt trash-icon"></i>
                </button>
            </form>
        </div>
        <div class="profile-info">
            <form method="post" action="@Url.Action("EditProfile", "Home")" enctype="multipart/form-data">
                <div class="form-grid">
                    <div>
                        <label>First Name:</label>
                        <input type="text" name="FirstName" value="@ViewData["FirstName"]" required />
                    </div>
                    <div>
                        <label>Last Name:</label>
                        <input type="text" name="LastName" value="@ViewData["LastName"]" required />
                    </div>
                    <div>
                        <label>Middle Name:</label>
                        <input type="text" name="MiddleName" value="@ViewData["MiddleName"]" />
                    </div>
                    <div>
                        <label>Birth Date:</label>
                        <p>@ViewData["BirthDate"] (@ViewData["Age"] years old)</p>
                    </div>
                    <div>
                        <label>Phone:</label>
                        <input type="tel" name="Phone" value="@ViewData["Phone"]" required />
                    </div>
                    <div>
                        <label>Email:</label>
                        <input type="email" name="Email" value="@ViewData["Email"]" required />
                    </div>
                    <div>
                        <label>Address:</label>
                        <input type="text" name="Address" value="@ViewData["Address"]" />
                    </div>
                    <div>
                        <label>Username:</label>
                        <input id="username" type="text" name="Username" value="@ViewData["Username"]" required />
                    </div>
                    <div>
                        <label>New Password:</label>
                        <div class="password-field">
                            <input type="password" name="Password" id="newPassword" minlength="8" />
                            <i class="fas fa-eye toggle-password" data-target="newPassword"></i>
                            <button type="button" id="generatePasswordBtn" class="generate-password-btn">
                                <i class="fas fa-key"></i>
                            </button>
                        </div>
                        <div id="password-strength-container">
                            <div id="password-strength-bar" class="strength-bar"></div>
                        </div>
                    </div>
                    <div>
                        <label>Confirm New Password:</label>
                        <div class="password-field">
                            <input type="password" name="ConfirmPassword" id="confirmPassword" required />
                            <i class="fas fa-eye toggle-password" data-target="confirmPassword"></i>
                        </div>
                    </div>
                </div>
                <div class="button-group">
                    <button type="submit" id="saveChangesBtn" class="btn btn-success" disabled>Save Changes</button>
                    <a href="@Url.Action("Index", "Home")" class="btn btn-secondary">Back</a>
                    <a href="@Url.Action("Logout", "Home")" class="btn btn-danger">Logout</a>
                </div>
            </form>
        </div>
    </div>
    <div class="orders-section">
        <h3>Your Orders</h3>
        @if (ViewData["Orders"] != null)
        {
            var orders = (List<Order>)ViewData["Orders"];
            if (orders.Any())
            {
                <div class="orders-grid">
                    @foreach (var order in orders.OrderByDescending(o => o.OrderDate))
                    {
                        <div class="order-card" id="order-@order.Id">
                            <a href="@Url.Action("OrderInfo", "Home", new { orderId = order.Id })">
                                <h5>Order #@order.Id</h5>
                            </a>
                            <p>
                                Status: <span class="badge @(order.Status switch
                                {
                                    OrderStatus.Pending => "badge-warning",
                                    OrderStatus.Accepted => "badge-primary",
                                    OrderStatus.Completed => "badge-info",
                                    OrderStatus.ReceivedByCustomer => "badge-success",
                                    _ => "badge-secondary"
                                })">@(order.Status.ToString() == "ReceivedByCustomer" ? "Received" : order.Status.ToString())</span>
                            </p>
                            @if (order.Status == OrderStatus.Completed)
                            {
                                <form asp-action="ConfirmOrderReceived" method="post">
                                    <input type="hidden" name="orderId" value="@order.Id" />
                                    <button type="submit" class="btn btn-success">
                                        Confirm Order Received
                                    </button>
                                </form>
                            }
                            @if (order.Status == OrderStatus.Pending || order.Status == OrderStatus.Accepted)
                            {
                                <form method="post" action="/Home/RequestOrderCancellation">
                                    <input type="hidden" name="orderId" value="@order.Id" />
                                    <button type="submit" class="btn btn-danger">
                                        Скасувати замовлення
                                    </button>
                                </form>
                            }
                            else if (order.Status == OrderStatus.CancellationRequested)
                            {
                                <span class="text-warning">Запит на скасування відправлено</span>
                            }
                            <p>Order Date: @order.OrderDate.ToString("g")</p>
                            @if (order.LastUpdated.HasValue)
                            {
                                <p>Last Updated: @order.LastUpdated.Value.ToString("g")</p>
                            }
                        </div>
                    }
                </div>
            }
            else
            {
                <p>You haven't placed any orders yet.</p>
            }
        }
        else
        {
            <p>No orders found.</p>
        }
    </div>
    <div class="comments-section">
        <div class="comments-header">
            <h3>Your Comments</h3>
            <span class="toggle-icon">▼</span>
        </div>
        <div class="comments-content">
            @if (ViewData["Comments"] != null)
            {
                var comments = (List<ModelStore.Models.Comment>)ViewData["Comments"];
                if (comments.Any())
                {
                    <ul class="list-group">
                        @foreach (var comment in comments)
                        {
                            <li class="list-group-item">
                                <strong>
                                    Commented on:
                                    <a href="@Url.Action("DetailItem", "Home", new { id = comment.ProductId })">
                                        @comment.Product.Name
                                    </a>
                                </strong>
                                <span class="text-muted">(@comment.DatePosted.ToString("g"))</span>
                                <p>@comment.Content</p>
                                <form method="post" action="@Url.Action("DeleteCommentFromProfile", "Home")" style="display:inline;">
                                    <input type="hidden" name="commentId" value="@comment.Id" />
                                    <button type="submit" class="btn btn-danger btn-sm">Delete</button>
                                </form>
                            </li>
                        }
                    </ul>
                }
                else
                {
                    <p>No comments found.</p>
                }
            }
        </div>
    </div>
</div>

<script src="~/js/profile.js"></script>