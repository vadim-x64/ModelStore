@{
    ViewData["Title"] = "Admin";
}

<h2>Admin Profile</h2>

<form id="profile-pic-form" enctype="multipart/form-data" method="post" action="@Url.Action("ChangeAdminProfilePicture", "Home")">
    <input id="file-input" type="file" name="profilePicture" class="hidden-input" accept="image/*" onchange="this.form.submit();" />
</form>

@if (ViewData["ProfilePicture"] != null)
{
    <img id="profile-pic" src="data:image/png;base64,@Convert.ToBase64String((byte[])ViewData["ProfilePicture"])"
         alt="Profile Picture" class="profile-pic" onclick="document.getElementById('file-input').click();" />
}

<form method="post" action="@Url.Action("ChangeAdminProfilePicture", "Home")">
    <input type="hidden" name="deletePicture" value="true" />
    <button type="submit" class="btn-trash" title="Delete Profile Picture">
        <i class="fas fa-trash-alt trash-icon"></i>
    </button>
</form>

<form method="post" action="@Url.Action("EditAdminProfile", "Home")" enctype="multipart/form-data">
    <div>
        <label>First Name:</label>
        <input type="text" name="FirstName" value="@ViewData["FirstName"]" required />
    </div>
    <div>
        <label>Last Name:</label>
        <input type="text" name="LastName" value="@ViewData["LastName"]" required />
    </div>
    <div>
        <label>Middle Name:</label>
        <input type="text" name="MiddleName" value="@ViewData["MiddleName"]" />
    </div>
    <div>
        <label>Email:</label>
        <input type="email" name="Email" value="@ViewData["Email"]" required />
    </div>
    <div>
        <label>Phone:</label>
        <input type="tel" name="Phone" value="@ViewData["Phone"]" />
    </div>
    <div>
        <label>Address:</label>
        <input type="text" name="Address" value="@ViewData["Address"]" />
    </div>
    <div>
        <label>Username:</label>
        <input type="text" name="Username" value="@ViewData["Username"]" required />
    </div>
    <div>
        <label>New Password:</label>
        <input type="password" name="Password" placeholder="Leave blank to keep current password" />
    </div>
    <div>
        <label>Confirm New Password:</label>
        <input type="password" name="ConfirmPassword" placeholder="Leave blank to keep current password" />
    </div>

    <button type="submit" id="saveChangesBtn" class="btn btn-success" disabled>Save Changes</button>
</form>

<a href="@Url.Action("Index", "Home")" class="btn btn-secondary">Back</a>
<a href="@Url.Action("Logout", "Home")" class="btn btn-danger">Logout</a>
<a href="@Url.Action("Customers", "Home")" class="btn btn-primary">Go to Customers</a>
<a href="@Url.Action("Category", "Home")" class="btn btn-info">Переглянути категорії</a>
<a href="@Url.Action("EditProduct", "Home")" class="btn btn-warning">Товари</a>

<h3>Your Comments</h3>
@if (ViewData["Comments"] != null)
{
    var comments = (List<ModelStore.Models.Comment>)ViewData["Comments"];
    if (comments.Any())
    {
        <ul class="list-group">
            @foreach (var comment in comments)
            {
                <li class="list-group-item">
                    <strong>
                        Commented on:
                        <a href="@Url.Action("DetailItem", "Home", new { id = comment.ProductId })">
                            @comment.Product.Name
                        </a>
                    </strong>
                    <span class="text-muted">(@comment.DatePosted.ToString("g"))</span>
                    <p>@comment.Content</p>
                    <form method="post" action="@Url.Action("DeleteCommentFromProfile", "Home")" style="display:inline;">
                        <input type="hidden" name="commentId" value="@comment.Id" />
                        <button type="submit" class="btn btn-danger btn-sm">Delete</button>
                    </form>
                </li>
            }
        </ul>
    }
    else
    {
        <p>No comments found.</p>
    }
}

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const saveButton = document.getElementById("saveChangesBtn");
        const inputs = Array.from(document.querySelectorAll("form input"));
        const newPasswordInput = document.querySelector("input[name='Password']");
        const confirmPasswordInput = document.querySelector("input[name='ConfirmPassword']");

        const initialValues = inputs.reduce((acc, input) => {
            acc[input.name] = input.value;
            return acc;
        }, {});

        confirmPasswordInput.disabled = true;

        newPasswordInput.addEventListener("input", function () {
            confirmPasswordInput.disabled = !newPasswordInput.value;
        });

        inputs.forEach(input => {
            input.addEventListener("input", () => {
                const hasChanges = inputs.some(i => i.value !== initialValues[i.name]);
                saveButton.disabled = !hasChanges;
            });
        });
    });
</script>

<style>
    .profile-pic {
        width: 150px;
        height: 150px;
        border-radius: 50%;
        object-fit: cover;
    }

    .hidden-input {
        display: none;
    }

    .btn-trash {
        border: none;
        background: none;
        cursor: pointer;
    }

        .btn-trash:hover {
            color: red;
        }

    .trash-icon {
        font-size: 1.5rem;
    }
</style>

<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">